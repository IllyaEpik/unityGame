using UnityEngine;
using UnityEngine.UI; 
using System.Collections; 

public class death : MonoBehaviour
{
    
    public Hero playerHero;

   
    public CanvasGroup gameOverPanelGroup; 
    public CanvasGroup gameOverPanelGroup1; 
    
    
    public float fadeDuration = 3f; 
    private bool isFading = false; 

    void Start()
    {
       
        if (gameOverPanelGroup != null || gameOverPanelGroup1 != null)
        {
            
            if (gameOverPanelGroup != null)
            {
                gameOverPanelGroup.alpha = 0f;
                gameOverPanelGroup.blocksRaycasts = false; 
            }
            if (gameOverPanelGroup1 != null)
            {
                gameOverPanelGroup1.alpha = 0f;
                gameOverPanelGroup1.blocksRaycasts = false; 
            }
        }
    }

    void Update()
    {
        // –î–æ–±–∞–≤–ª–µ–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ playerHero –Ω–∞ null
        if (playerHero == null)
        {
            return;
        }
        if (playerHero.health > 0)
        {
            if (gameOverPanelGroup != null)
            {
                gameOverPanelGroup.alpha = 0f;
                gameOverPanelGroup.blocksRaycasts = false; 
            }
            if (gameOverPanelGroup1 != null)
            {
                gameOverPanelGroup1.alpha = 0f;
                gameOverPanelGroup1.blocksRaycasts = false; 
            }
        }

        // 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ª–æ–≤–∏–µ —Å–º–µ—Ä—Ç–∏ –∏ —É–±–µ–∂–¥–∞–µ–º—Å—è, —á—Ç–æ –∞–Ω–∏–º–∞—Ü–∏—è –µ—â–µ –Ω–µ –∑–∞–ø—É—â–µ–Ω–∞
        if (playerHero.health <= 0 && !isFading)
        {
            Debug.Log("–ì–µ—Ä–æ–π —É–º–µ—Ä! –ó–∞–ø—É—Å–∫–∞–µ–º —ç–∫—Ä–∞–Ω—ã Game Over.");
            
            isFading = true;
            
            // üí° –í–∫–ª—é—á–∞–µ–º –±–ª–æ–∫–∏—Ä–æ–≤–∫—É –≤–≤–æ–¥–∞ –Ω–∞ –≥–ª–∞–≤–Ω–æ–º —ç–∫—Ä–∞–Ω–µ –¢–û–õ–¨–ö–û –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º –ø–æ—è–≤–ª–µ–Ω–∏—è
            if (gameOverPanelGroup != null)
            {
                gameOverPanelGroup.blocksRaycasts = true; 
            }
            
            StartFadeIn(0f, 1f, fadeDuration);
        }
    }

    // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –∫–æ—Ä—É—Ç–∏–Ω—ã
    public void StartFadeIn(float startAlpha, float endAlpha, float duration)
    {
        // –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ—Ä—É—Ç–∏–Ω—É –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
        if (gameOverPanelGroup != null)
        {
            StartCoroutine(FadeCanvasGroup(gameOverPanelGroup, startAlpha, endAlpha, duration));
        }
        
        // –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ—Ä—É—Ç–∏–Ω—É –¥–ª—è –≤—Ç–æ—Ä–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
        if (gameOverPanelGroup1 != null)
        {
            StartCoroutine(FadeCanvasGroup(gameOverPanelGroup1, startAlpha, endAlpha, duration));
        }
    }

    // --- –ö–æ—Ä—É—Ç–∏–Ω–∞ –¥–ª—è –ø–ª–∞–≤–Ω–æ–≥–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç–∏ Canvas Group ---
    
    IEnumerator FadeCanvasGroup(CanvasGroup groupToFade, float startAlpha, float endAlpha, float duration)
    {
        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ null –≤–Ω—É—Ç—Ä–∏ –∫–æ—Ä—É—Ç–∏–Ω—ã
        if (groupToFade == null)
        {
            yield break; // –í—ã—Ö–æ–¥, –µ—Å–ª–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
        }

        float startTime = Time.time;
        float elapsed = 0f;
        
        while (elapsed < duration)
        {
            elapsed = Time.time - startTime;
            
            float t = Mathf.Clamp01(elapsed / duration); 
            float newAlpha = Mathf.Lerp(startAlpha, endAlpha, t);

            // –ú–µ–Ω—è–µ–º –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å
            groupToFade.alpha = newAlpha;

            yield return null; 
        }

        // –£–±–µ–∂–¥–∞–µ–º—Å—è, —á—Ç–æ –∞–ª—å—Ñ–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –≤ –∫–æ–Ω–µ—á–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
        groupToFade.alpha = endAlpha;
        
        // –ü–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏: –æ—Ç–∫–ª—é—á–∞–µ–º –±–ª–æ–∫–∏—Ä–æ–≤–∫—É –≤–≤–æ–¥–∞, –µ—Å–ª–∏ —ç–∫—Ä–∞–Ω —Å–Ω–æ–≤–∞ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –ø—Ä–æ–∑—Ä–∞—á–Ω—ã–º
        groupToFade.blocksRaycasts = (endAlpha == 1f); 
    }
}